/*
 //This is a sample code for sending an email. Uncomment to execute or make changes to this function.
sendmail
[
from : zoho.loginuserid
to : "abc@xyz.com"
subject : "This is a test mail:"
message : "Hi there, This is a sample mail generated from a custom function."
]
*/
if(noOfRevisions.isNull())
{
	return "No Revision Number";
}
targetCompletionDateFieldID = "UDF_DATE22";
if(complexity.equals("Low Complexity"))
{
	numberOfBusinessDays = 1;
}
else if(complexity.equals("Medium Complexity"))
{
	numberOfBusinessDays = 4;
}
else if(complexity.equals("High Complexity"))
{
	numberOfBusinessDays = 6;
}
targetCompletionDate = addBusinessDay(stageDate.toDate(),numberOfBusinessDays);
taskUpdateMap = Map();
customFieldUpdateMap = Map();
customFieldUpdateMap.put(targetCompletionDateFieldID,targetCompletionDate.toString("MM-dd-yyyy"));
taskUpdateMap.put('custom_fields',customFieldUpdateMap);
taskUpdate = zoho.projects.update(portalId,projectId,"Tasks",taskId,taskUpdateMap,"zapp_conn");
ownerName = "devtac125";
appLinkName = "presales-solutioning-monitoring";
projectReportLinkName = "All_Projects";
revisionFormLinkName = "Revisions";
revisionReportLinkName = "All_Revisions";
revisionSyncMap = Map();
revisionSyncMap.put('Revision_Number',noOfRevisions);
revisionSyncMap.put('Complexity',complexity);
revisionSyncMap.put('Start_Date',stageDate.toString("dd-MMM-yyyy"));
revisionSyncMap.put('Project_Overall_Hrs',totalHrs);
if(!actualCompletionDate.isNull())
{
	revisionSyncMap.put('Actual_Completion_Date',actualCompletionDate.toString("dd-MMM-yyyy"));
}
revisionSyncMap.put('Target_Completion_Date',targetCompletionDate.toString("dd-MMM-yyyy"));
existingProjectRecord = zoho.creator.getRecords(ownerName,appLinkName,projectReportLinkName,"ZProject_Task_ID ==\"" + taskId + "\"",1,1,"zapp_conn");
info {"Existing Project ":existingProjectRecord};
if(!existingProjectRecord.get('data').isNull())
{
	existingProjectRecordID = existingProjectRecord.get('data').getJSON('ID');
	existingRevisionRecord = zoho.creator.getRecords(ownerName,appLinkName,revisionReportLinkName,"(Project==" + existingProjectRecordID + ") && (Revision_Number==" + noOfRevisions + ")",1,1,"zapp_conn");
	info existingRevisionRecord;
	if(!existingRevisionRecord.get('data').isNull())
	{
		existingRevisionRecordID = existingRevisionRecord.get('data').getJSON('ID');
		syncRevision = zoho.creator.updateRecord(ownerName,appLinkName,revisionReportLinkName,existingRevisionRecordID,revisionSyncMap,Map(),"zapp_conn");
		info {"Revision Update Sync":syncRevision};
	}
	else
	{
		revisionSyncMap.put('Project',existingProjectRecordID);
		syncRevision = zoho.creator.createRecord(ownerName,appLinkName,revisionFormLinkName,revisionSyncMap,Map(),"zapp_conn");
		info {"Revision Creation Sync":syncRevision};
	}
}
return "success";